// Generated by CoffeeScript 1.11.1
(function() {
  var render_background, render_hud, render_sprites;

  window.init_graphics = function(game_objs) {
    var new_div, score, sdata, sprite;
    for (sprite in game_objs["sprites"]) {
      sdata = game_objs["sprites"][sprite];
      new_div = $("<div>");
      new_div.css({
        position: "fixed",
        height: sdata["r"],
        width: sdata["r"],
        fill: sdata["img"]
      });
      $("body").append(new_div);
      sdata["div"] = new_div;
    }
    if (game_objs.hud != null) {
      game_objs.hud.score.remove();
    }
    score = $("<div>");
    score.css({
      position: "fixed",
      height: 50,
      width: 50,
      left: 25,
      top: game_objs.h - 50,
      fontSize: 30
    });
    score.appendTo($('body'));
    game_objs['hud'] = {
      score: score
    };
    return $("body").css({
      height: "100vh",
      width: "100vw"
    });
  };

  window.render = function(game_objs) {
    render_background(game_objs);
    render_sprites(game_objs);
    return render_hud(game_objs);
  };

  render_background = function(go) {
    return 'if go.hit_ctr > 0\n	$(\'body\').css\n		background: go.hit_img\nelse\n	$(\'body\').css\n		background: \'#fff\'';
  };

  render_hud = function(go) {
    return go.hud.score.text(go.score);
  };

  render_sprites = function(game_objs) {
    var results, s, sprite;
    results = [];
    for (sprite in game_objs["sprites"]) {
      s = game_objs["sprites"][sprite];
      results.push(s["div"].css({
        background: s["img"],
        fill: s["img"],
        left: s["cx"] - s["r"] / 2,
        top: s["cy"] - s["r"] / 2,
        height: s["r"],
        width: s["r"]
      }));
    }
    return results;
  };

}).call(this);
